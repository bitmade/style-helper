/// Adding vertical spacing to all text-blocks
/// @param {List} $blocks - List of selectors, e.g. p, ul, ol
@mixin set-text-blocks($blocks: $bm-text-blocks) {
  @each $block in $blocks {
    #{$block} {
      @extend %bm-text-margin
    }
  }
}

/// Clearing vertical spacing between headlines and text-blocks to avoid "double-margins".
/// @param {List} $headings - List of headline-selectors, e.g. h1, h2, h3, h4
/// @param {List} $blocks - List of text-block-selectors, e.g. p, ul, ol
@mixin set-headings($headings: $bm-headings, $blocks: $bm-text-blocks) {
  @each $heading in $headings {

    // We need to reset the top margin for every possible text-block after every headline, so we loop through all textblocks
    @each $block in $blocks {

      #{$heading} + #{$block} {
        @extend %bm-reset-margin-top
      }
    }
  }
}

/// Initializing default font-size and line-height to an element.
/// This mixin is intended to be applied to a root element, such as `body` or `html`
/// @param {String} $font [$bm-font-fallback] - A custom font that is applied, e.g. "Comic Sans"
/// @param {Number} $fontsize - A fontsize-value in pixel
/// @param {Number} $lineheight - A line-height-value in pixel
/// @param {String} $fallback [$bm-font-fallback] - A font-fallback to make sure everything looks nice in its default-state
/// @requires $bm-font-fallback
/// @requires $bm-fontsize
/// @requires $bm-lineheight
@mixin set-font($font: $bm-font-fallback, $fontsize: $bm-fontsize, $lineheight: $bm-lineheight, $fallback: $bm-font-fallback) {

  // Use default fallback when no font is passed
  @if $font == $fallback {
    font-family: $font;
  } @else { // use custom font and/or custom fallback if passed
    font-family: $font, $fallback;
  }

  font-size: ensure-pixel-unit($fontsize);
  line-height: ensure-pixel-unit($lineheight);
}
